/*Задание 2

Составьте SQL-запросы. Придумайте, как оценить показатели, и напишите запросы для расчёта придуманных метрик. 
Представьте, что в вашем распоряжении есть все ресурсы по сбору статистики. Если вам необходимы дополнительные данные, 
то опишите, чего не хватает в тестовой базе, чтобы посчитать нужные метрики.*/

select * from content_watch w left join content_info  i on w.content_id=i.content_id;

/*1.	"Цепляемость" и "крутость" сериала. Нужна какая-то метрика, которая при наличии трёх-четырёх серий сериала позволит 
сравнить этот сериал по "крутости" с другими сериалами.

Варианты:
- "ретеншн" по сериям (выбираю ее как самую интерпретируемую и устойчивую к внешним влияниям)
	- нужно определить, что считать просмотром серии
	- непонятно, что делать с теми, кто начинает смотреть не с первой серии
	- не него могут влиять специфичные акции
	
- повторные просмотры одного пользователя
	- может быть как из-за "цепляемости", так и из-за показов родственникам
	- накручивается при перебоях с интернетом у пользователя
	
- средняя продолжительность просмотра от длительности серии
	- влияет реклама и перебои со связью
	
- разница для последней между исследуемым сериалом и остальным контентом, который смотрит отдельный пользователь
	- данные слишком разнесены по времени
	
Как считаем:
 coolness = # посмотревших все серии до серии N вкл / # посмотревших 1-ю серию
 просмотр = 70% длительности (для учета перемотки повтора и титров) 
*/


-- запрос будет примерно такой (не работает из-за недостающих данных)
with first_watch as (select count(distinct user_id) from content_watch w left join content_info  i on w.content_id=i.content_id
where compilation_id = /*id нужного сериала*/ -- нужна таблица с названиями и id контента
and episode = 1
and show_duration >= 0.75*/*длительность серии*/)

select count(*)/first_watch from 
(select distinct user_id from content_watch w left join content_info  i on w.content_id=i.content_id
where compilation_id = /*id нужного сериала*/ -- нужна таблица с названиями и id контента
and episode between 1 and N
and show_duration >= 0.75*/*длительность серии*/
group by user_id
having count(*)= N)



--2.	Ретеншн всех пользователей сервиса. Нужно просегментировать аудиторию, рассчитать её ретеншн по сегментам и дать 
--рекомендации по тому, как увеличить ретеншн каждого из сегментов


-- простая сегментация:  total show duration,
-- rfm анализ по просмотрам
-- ретеншн: retention7 = # посмотревших сегодня / # в первый раз посмотревших 7 дней назад * 100%
-- табличка rf-m
